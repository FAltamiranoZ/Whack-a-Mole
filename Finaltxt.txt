1.- Sabemos que en causal, el ordenamiento esta definido por relaciones causa efecto. Por lo que podemos apreciar que en el diagrama:
Ce -> Cw
Cw -> Cb
Cw -> Cg
2.- Como funciona esto es de la siguiente manera:
Por un lado, los web services son programas que implementamos en el servidor de manera que todo el mundo pueda acceder a ellos, estos programas se ejecutan en el servidor para evitar que se procese esta información en el dispositivo del usuario (un ejemplo es la suma que hicimos en clase). Para poder acceder a estos servicios, es necesario tener una interface, la cual será WSDL; esta interface enlistará todos los servicios que están disponibles para los clientes y describirá como acceder a estos.
Por otro lado, SOAP es un estándar que tiene como objetivo facilitar la comunicación entre el cliente y el proveedor; esto lo hace al homogeneizar todos los mensajes metiéndolos en un sobre, y poniéndoles un body y header (opcional). Lo que nos permite esto es que, a pesar de que sea más lento, se pueden comunicar sin problema tanto el cliente como el proveedor.
Por último, la representación que acepta SOAP es le de tipo XML, por lo que será la manera en la que se escriban los mensajes; HTTP, SMTP y otros, son los protocolos que se utilizan para poder enviar los mensajes; finalmente, URI es la manera en la que se identifica un recurso en la red, en este caso, todas las URI siguen las mismas reglas y por ello se usan para transmitir con SOAP.
3.- La característica principal de UDP es que no establece conexiones; sino que más bien, envía datagramas a través de una múltiples routers.
Multicast, tiene como objetivo el poder distribuir un mensaje a múltiples recipientes sin tener que conocerlos; por ello, UDP es la manera en la que se integra, ya que aquellas personas que estén interesadas en recibir el mensaje de multicast, solo necesitan prestar atención al socket a través del cual multicast esta transmitiendo mensajes; mientras que si se integrara con TCP, sería necesario que entre si se comunicaran de manera directa para poder establecer una “carretera” (dataInputStream y dataOutputStream) y así, intercambien mensajes (A pesar de que solo me interesa recibir en multicast).
4.- La razón por la que se usaría un bróker network en vez de un sistema centralizado es porque una red es mucho más escalable y además puede evitar fallos; la manera en la que se implementa es creando múltiples brokers; una vez que se tengan, se procede a conectarlos entre si, puede ser una lista de direcciones preespecificada o usar métodos de descubrimiento, lo que nos permite que sea estática o dinámica nuestra red; y por último, se realizan las conexiones entre publicadores y suscriptores.
5.- Sabemos que llevar un reloj global en un sistema distribuido es en extremo difícil debido a las imperfecciones del sistema; es decir, cada uno puede experimentar problemas como jitters, retraso, etc. O también puede ser que cada uno tenga un diferente clock interno y por ello la sincronización sea difícil. Para poder implementar un reloj global se deberían de poder corregir todas estas imperfecciones o implementar un sistema que no se vea afectado por estas, como establecer un tiempo lógico (El que propuso Lamport)
