package whackamole;

import java.awt.event.WindowEvent;
import java.net.*;
import java.io.*;
import javax.swing.JButton;
import java.util.logging.*;

public class GUI extends javax.swing.JFrame {

    JButton[] gameButtons = new JButton[9];
    int[] gameBoard = new int[9];
    String hole, mole, icon, name, player, gameThread, win, lose;
    int session, localScore;
    GameConfiguration gameConfig;
    Socket s = null;

    public GUI(String session, String prevPlayer, String player, Socket ss, int score) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.session = Integer.parseInt(session);
        this.player = player;
        if (!prevPlayer.equals(player)) {
            this.localScore = 0;
        } else {
            this.localScore = score;
        }
        jLabel6.setVisible(false);
        hole = "/whackamole/hole.png";
        mole = "/whackamole/mole.png";
        win = "/whackamole/win.png";
        lose = "/whackamole/lose.png";
        gameButtons[0] = jButton1;
        gameButtons[1] = jButton2;
        gameButtons[2] = jButton3;
        gameButtons[3] = jButton4;
        gameButtons[4] = jButton5;
        gameButtons[5] = jButton6;
        gameButtons[6] = jButton7;
        gameButtons[7] = jButton8;
        gameButtons[8] = jButton9;
        jLabel1.setText("");
        jLabel2.setText("Score: " + localScore);
        

        try {

            int serverPort = this.session;
            localScore = 0;
            s = new Socket("localhost", serverPort);

        } catch (UnknownHostException e) {
            System.out.println("Sock:" + e.getMessage());
        } catch (EOFException e) {
            System.out.println("EOF:" + e.getMessage());
        } catch (IOException e) {
            System.out.println("IO:" + e.getMessage());
        }
        MulticastClient clientIn = new MulticastClient();
        clientIn.start();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(880, 510));
        setSize(new java.awt.Dimension(880, 510));
        getContentPane().setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(280, 10, 100, 100);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(280, 120, 100, 100);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(280, 230, 100, 100);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(390, 10, 100, 100);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(390, 120, 100, 100);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(500, 10, 100, 100);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(390, 230, 100, 100);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(500, 120, 100, 100);

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 380, 551, 13);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/hole.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(500, 230, 100, 100);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(680, 90, 160, 180);

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(650, 20, 213, 13);

        jButton10.setText("Return");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10);
        jButton10.setBounds(670, 310, 160, 40);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(650, 50, 213, 20);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/moleGUI.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 60, 257, 230);

        jButton11.setText("Exit");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11);
        jButton11.setBounds(670, 360, 160, 40);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/whackamole/background.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 880, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        icon = gameButtons[0].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[0].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        icon = gameButtons[1].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[1].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        icon = gameButtons[2].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[2].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        icon = gameButtons[3].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[3].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        icon = gameButtons[4].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[4].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        icon = gameButtons[5].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[5].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        icon = gameButtons[6].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[6].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        icon = gameButtons[7].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[7].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        icon = gameButtons[8].getIcon().toString();
        name = icon.substring(icon.length() - 8);
        if (name.equals("mole.png")) {
            transfer();
            gameButtons[8].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        GameConfiguration sg = new GameConfiguration(player, s, localScore);
        sg.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            s.close();
            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void transfer() {
        try {
            DataInputStream in = new DataInputStream(s.getInputStream());
            DataOutputStream out = new DataOutputStream(s.getOutputStream());
            out.writeUTF(player);
            String score = in.readUTF();
            if (score.equals("End")) {
                s.close();
            } else {
                localScore = Integer.parseInt(score) + 1;
                jLabel2.setText("Score: " + localScore);
                out.writeInt(localScore);
                in.readUTF();
            }
        } catch (UnknownHostException e) {
            System.out.println("Sock:" + e.getMessage());
        } catch (EOFException e) {
            System.out.println("EOF:" + e.getMessage());
        } catch (IOException e) {
            System.out.println("IO:" + e.getMessage());
        }
    }

    class MulticastClient extends Thread {
        @Override
        public void run() {
            MulticastSocket s = null;
            try {
                InetAddress group = InetAddress.getByName("228.5.8.7");
                System.out.println(session);
                s = new MulticastSocket(session);
                s.joinGroup(group);
                while (true) {
                    System.out.println("Waiting for messages");
                    byte[] b = new byte[1000];
                    DatagramPacket in = new DatagramPacket(b, b.length);
                    s.receive(in);
                    String endGame = new String(in.getData());
                    if (endGame.substring(0, 15).equals("The winner is: ")) {
                            String winner = endGame.substring(28, 28+player.length());
                            if(winner.equals(player)){
                                jLabel6.setVisible(true);
                                jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource(win)));
                            }else{
                                jLabel6.setVisible(true);
                                jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource(lose)));
                            }
                        String LMessage = (endGame + "\n" + " Restarting in 10 seconds");
                        jLabel1.setText(LMessage);
                        System.out.println(LMessage);
                        localScore = 0;
                        jLabel2.setText("Score: " + localScore);
                        Thread.sleep(10000);
                        localScore = 0;
                        jLabel2.setText("Score: " + localScore);
                        jLabel1.setText("");
                        jLabel6.setVisible(false);
                    } else {
                        for (int i = 0; i < 9; i++) {
                            gameBoard[i] = Integer.parseInt(endGame.substring(i, i + 1));
                            System.out.print(gameBoard[i]);
                        }
                        System.out.println("");
                        for (int i = 0; i < 9; i++) {
                            if (gameBoard[i] == 1) {
                                gameButtons[i].setIcon(new javax.swing.ImageIcon(getClass().getResource(mole)));
                            } else {
                                gameButtons[i].setIcon(new javax.swing.ImageIcon(getClass().getResource(hole)));
                            }
                        }
                    }
                }
            } catch (SocketException e) {
                System.out.println("Socket: " + e.getMessage());
            } catch (IOException e) {
                System.out.println("IO: " + e.getMessage());
            } catch (InterruptedException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                if (s != null) {
                    s.close();
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
